<?xml version="1.0" encoding="UTF-8"?>
<TestScript xmlns="http://hl7.org/fhir" xmlns:nts="http://nictiz.nl/xsl/testscript">
   <id value="gbz-fhir3-0-1-send-1-1"/>
   <url value="http://nictiz.nl/fhir/fhir3-0-1/TestScript/gbz-fhir3-0-1-send-1-1"/>
   <name value="Nictiz Geboortezorg - Client - Scenario 1.1 - Send resources for previous pregnancy 3 and 4"/>
   <status value="active"/>
   <date value="2020-07-03"/>
   <publisher value="Nictiz"/>
   <contact>
      <name value="Nictiz"/>
      <telecom>
         <system value="email"/>
         <value value="kwalificatie@nictiz.nl"/>
         <use value="work"/>
      </telecom>
   </contact>
   <description value="Geboortezorg for FHIR STU3 (v3.0.1) - Scenario 1.1: Send Record Previous Pregnancy 3 and 4 - XML Format"/>
   <origin>
      <index value="1"/>
      <profile>
         <system value="http://hl7.org/fhir/testscript-profile-origin-types"/>
         <code value="FHIR-Client"/>
      </profile>
   </origin>
   <destination>
      <index value="1"/>
      <profile>
         <system value="http://hl7.org/fhir/testscript-profile-destination-types"/>
         <code value="FHIR-Server"/>
      </profile>
   </destination>
   <fixture id="patient-token-fixture">
      <resource>
         <reference value="../_reference/Gebz-XXX-Sara-token.xml"/>
      </resource>
   </fixture>
   <fixture id="Bundle-samenvatting-zwangerschap3-fx">
      <resource>
         <reference value="../_reference/Gebz-prio1-vorige-zwangerschap-transaction-samenvatting-wouden-zwangerschap-3.xml"/>
      </resource>
   </fixture>
   <fixture id="Bundle-samenvatting-zwangerschap4-fx">
      <resource>
         <reference value="../_reference/Gebz-prio1-huidige-zwangerschap-transaction-samenvatting-wouden-zwangerschap-4.xml"/>
      </resource>
   </fixture>
   <profile id="Bundle-profile">
      <reference value="http://hl7.org/fhir/StructureDefinition/Bundle"/>
   </profile>
   <variable>
      <name value="patient-token-id"/>
      <expression value="Patient.id"/>
      <sourceId value="patient-token-fixture"/>
   </variable>
   <test id="01-SendRecordPreviousPregnancy3">
      <name value="01-SendRecordPreviousPregnancy3"/>
      <description value="Test Client request to create/update previous pregnancy 3 resources from transaction Bundle. The expected response code is 200 (Updated) or 201(Created)."/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/testscript-operation-codes"/>
               <code value="transaction"/>
            </type>
            <description value="Server create or update operation for a transaction Bundle of resources for previous pregnancy 3."/>
            <contentType value="xml"/>
            <destination value="1"/>
            <origin value="1"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="${patient-token-id}"/>
            </requestHeader>
            <sourceId value="Bundle-samenvatting-zwangerschap3-fx"/>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that HTTP header Authorization contains the patient token ${patient-token-id}"/>
            <direction value="request"/>
            <headerField value="Authorization"/>
            <value value="${patient-token-id}"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
            <direction value="request"/>
            <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all posted resources contain a meta.profile tag."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(meta.profile.empty()).empty()"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all resources that are updated contain a Resource.id and a fullUrl."/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(request.method='PUT').all( $this.fullUrl.exists() and $this.resource.id.exists())"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all resources that are created don't contain a Resource.id."/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(request.method='POST').all($this.resource.id.exists().not())"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all resources that are created don't have a RESTful fullUrl."/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(request.method='POST').all( $this.fullUrl.startsWith('http://').not() and $this.fullUrl.startsWith('https://').not() )"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all resources that are created contain no fullUrl or a UUID or OID based fullUrl."/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(request.method='POST').fullUrl.all( exists().not or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl does not disagree with the id in the resource, see http://hl7.org/fhir/stu3/bundle-definitions.html#Bundle.entry.fullUrl"/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(fullUrl.exists() and resource.id.exists()).all($this.fullUrl.endsWith($this.resource.id))"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl is an absolute URL, an uuid or an oid."/>
            <direction value="request"/>
            <expression value="Bundle.entry.fullUrl.all( startsWith('http://') or startsWith('https://') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that literal References (Reference.reference) are an absolute URL, a relative URL or an internal fragment reference (contained), see: http://hl7.org/fhir/stu3/references.html#literal."/>
            <direction value="request"/>
            <expression value="Bundle.descendants().reference.all( startsWith('http://') or startsWith('https://') or startsWith('#') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') or (startsWith('urn:').not() and startsWith('#').not() and matches('^[A-Za-z]{3,}/[^/]+$')) )"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/MedMij:V2019.01_FHIR_IG#Use_of_the_reference_datatype."/>
            <direction value="request"/>
            <expression value="Bundle.descendants().where($this.is(Reference)).all(display.exists())"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all CodeableConcept elements contain a coding.display or a text value if no Coding exists, see https://informatiestandaarden.nictiz.nl/wiki/MedMij:V2019.01_FHIR_IG#Use_of_coded_concepts."/>
            <direction value="request"/>
            <expression value="Bundle.descendants().where($this.is(CodeableConcept)).all( coding.display.exists() or (coding.exists().not() and text.exists()))"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
            <direction value="request"/>
            <validateProfileId value="Bundle-profile"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned HTTP status is 200(OK) or 201(Created)."/>
            <direction value="response"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all requests in the transaction Bundle return responses 200(OK) or 201(Created)."/>
            <direction value="response"/>
            <expression value="Bundle.entry.response.where(status='200' or status='201').count() = Bundle.entry.count()"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that request Bundle is of type transaction."/>
            <direction value="request"/>
            <expression value="Bundle.type = 'transaction'"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Patient resource exists."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Patient)).count() = 2"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Observation resource exists with code '11996-6'."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Observation) and code.coding.where(code = '11996-6')).count() = 1"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Observation resource exists with code '11977-6'."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Observation) and code.coding.where(code = '11977-6')).count() = 1"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Observation resource exists with code 'EindeZw'."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Observation) and code.coding.where(code = 'EindeZw')).count() = 1"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Observation resource exists with code '118951000146109'."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Observation) and code.coding.where(code = '118951000146109')).count() = 1"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Observation resource exists with code '249120008'."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Observation) and code.coding.where(code = '249120008')).count() = 1"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Observation resource exists with code '364332008'."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Observation) and code.coding.where(code = '364332008')).count() = 1"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Observation resource exists with code '364297003'."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Observation) and code.coding.where(code = '364297003')).count() = 1"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Observation resource exists with code '249163006'."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Observation) and code.coding.where(code = '249163006')).count() = 1"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Observation resource exists with code '364336006'."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Observation) and code.coding.where(code = '364336006')).count() = 1"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Observation resource exists with code '9274-2'."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Observation) and code.coding.where(code = '9274-2')).count() = 1"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Observation resource exists with code '8339-4'."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Observation) and code.coding.where(code = '8339-4')).count() = 1"/>
         </assert>
      </action>
   </test>
   <test id="02-SendRecordCurrentPregnancy4">
      <name value="02-SendRecordCurrentPregnancy4"/>
      <description value="Test Client request to create/update previous pregnancy 4 resources from transaction Bundle. The expected response code is 200 (Updated) or 201(Created)."/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/testscript-operation-codes"/>
               <code value="transaction"/>
            </type>
            <description value="Server create or update operation for a transaction Bundle of resources for current pregnancy 4."/>
            <contentType value="xml"/>
            <destination value="1"/>
            <origin value="1"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="${patient-token-id}"/>
            </requestHeader>
            <sourceId value="Bundle-samenvatting-zwangerschap4-fx"/>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that HTTP header Authorization contains the patient token ${patient-token-id}"/>
            <direction value="request"/>
            <headerField value="Authorization"/>
            <value value="${patient-token-id}"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
            <direction value="request"/>
            <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all posted resources contain a meta.profile tag."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(meta.profile.empty()).empty()"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all resources that are updated contain a Resource.id and a fullUrl."/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(request.method='PUT').all( $this.fullUrl.exists() and $this.resource.id.exists())"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all resources that are created don't contain a Resource.id."/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(request.method='POST').all($this.resource.id.exists().not())"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all resources that are created don't have a RESTful fullUrl."/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(request.method='POST').all( $this.fullUrl.startsWith('http://').not() and $this.fullUrl.startsWith('https://').not() )"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all resources that are created contain no fullUrl or a UUID or OID based fullUrl."/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(request.method='POST').fullUrl.all( exists().not or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl does not disagree with the id in the resource, see http://hl7.org/fhir/stu3/bundle-definitions.html#Bundle.entry.fullUrl"/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(fullUrl.exists() and resource.id.exists()).all($this.fullUrl.endsWith($this.resource.id))"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl is an absolute URL, an uuid or an oid."/>
            <direction value="request"/>
            <expression value="Bundle.entry.fullUrl.all( startsWith('http://') or startsWith('https://') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that literal References (Reference.reference) are an absolute URL, a relative URL or an internal fragment reference (contained), see: http://hl7.org/fhir/stu3/references.html#literal."/>
            <direction value="request"/>
            <expression value="Bundle.descendants().reference.all( startsWith('http://') or startsWith('https://') or startsWith('#') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') or (startsWith('urn:').not() and startsWith('#').not() and matches('^[A-Za-z]{3,}/[^/]+$')) )"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/MedMij:V2019.01_FHIR_IG#Use_of_the_reference_datatype."/>
            <direction value="request"/>
            <expression value="Bundle.descendants().where($this.is(Reference)).all(display.exists())"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all CodeableConcept elements contain a coding.display or a text value if no Coding exists, see https://informatiestandaarden.nictiz.nl/wiki/MedMij:V2019.01_FHIR_IG#Use_of_coded_concepts."/>
            <direction value="request"/>
            <expression value="Bundle.descendants().where($this.is(CodeableConcept)).all( coding.display.exists() or (coding.exists().not() and text.exists()))"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
            <direction value="request"/>
            <validateProfileId value="Bundle-profile"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned HTTP status is 200(OK) or 201(Created)."/>
            <direction value="response"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all requests in the transaction Bundle return responses 200(OK) or 201(Created)."/>
            <direction value="response"/>
            <expression value="Bundle.entry.response.where(status='200' or status='201').count() = Bundle.entry.count()"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that request Bundle is of type transaction."/>
            <direction value="request"/>
            <expression value="Bundle.type = 'transaction'"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Patient resource exists."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Patient)).count() = 1"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Observation resource exists with code '883-9'."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Observation) and code.coding.where(code = '883-9')).count() = 1"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Observation resource exists with code '1305-2'."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Observation) and code.coding.where(code = '1305-2')).count() = 1"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Observation resource exists with code '1159-3'."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Observation) and code.coding.where(code = '1159-3')).count() = 1"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Observation resource exists with code '718-7'."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Observation) and code.coding.where(code = '718-7')).count() = 1"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Observation resource exists with code '364320009'."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Observation) and code.coding.where(code = '364320009')).count() = 1"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Observation resource exists with code '11996-6'."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Observation) and code.coding.where(code = '11996-6')).count() = 1"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Observation resource exists with code '11977-6'."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Observation) and code.coding.where(code = '11977-6')).count() = 1"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Observation resource exists with code '11778-8'."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Observation) and code.coding.where(code = '11778-8')).count() = 1"/>
         </assert>
      </action>
   </test>
</TestScript>
