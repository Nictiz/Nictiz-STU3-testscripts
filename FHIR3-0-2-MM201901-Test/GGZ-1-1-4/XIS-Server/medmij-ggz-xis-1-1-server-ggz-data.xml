<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://hl7.org/fhir/STU3/testscript.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TestScript xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://hl7.org/fhir http://hl7.org/fhir/STU3/fhir-all.xsd" xmlns="http://hl7.org/fhir">
    <id value="medmij-ggz-xis-1-1-serve-ggz-xml"/>
    <url value="http://nictiz.nl/fhir/TestScript/medmij-ggz-xis-1-1-serve-ggz-xml"/>
    <version value="stu3-1.1.4"/>
    <name value="Nictiz MedMij GGZ - XIS Server - Scenario 1.1 - Serve GGZ - XML"/>
    <status value="active"/>
    <date value="2019-11"/>
    <publisher value="Nictiz"/>
    <contact>
        <name value="Nictiz"/>
        <telecom>
            <system value="email"/>
            <value value="kwalificatie@nictiz.nl"/>
            <use value="work"/>
        </telecom>
    </contact>
    <description value="MedMij GGZ for FHIR STU3 - Scenario 1.1: Serve GGZ - XML Format - All GGZ resources of XXX_Bals. Response consists of 20 resources."/>
    <copyright value="Â© Nictiz 2019"/>
    <fixture id="patient-token-fixture">
        <resource>
            <reference value="../_reference/resources/ggz-nl-core-patient-XXX-Bals-token.xml"/>
        </resource>
    </fixture>
    <profile id="Bundle-profile">
        <reference value="http://hl7.org/fhir/StructureDefinition/Bundle"/>
    </profile>
    <variable>
        <name value="patient-token-id"/>
        <expression value="Patient.id"/>
        <sourceId value="patient-token-fixture"/>
    </variable>
    <variable>
        <name value="token-XXX-Bals"/>
        <defaultValue value="Bearer 6fc70c51-bdda-422e-9eaa-899fe24c4ef9"/>
        <!--<defaultValue value="${patient1-token-id}"/>-->
        <description value="OAuth Token for patient XXX_Bals"/>
    </variable>
    <!-- No Setup -->
    <test id="01-ServeGGZ-Patient">
        <name value="01-ServeGGZ-Patient"/>
        <description value="Test XIS serve operation for known Patient resource of XXX-Bals including the patient's general practitioner. The expected response code is 200(OK) and content is a searchset Bundle resource with 2 entries, returned in XML format."/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="Patient"/>
                <description value="XIS serve operation for known Patient, including the referenced Practitioner or Organization resource."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <params value="?_include=Patient:general-practitioner"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${token-XXX-Bals}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client requested an Accept of the FHIR XML mime type 'application/fhir+xml'."/>
                <direction value="request"/>
                <headerField value="Accept"/>
                <operator value="contains"/>
                <value value="application/fhir+xml"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client did not request a Content-Type. Warning only to allow for systems that automatically send Content-Type."/>
                <direction value="request"/>
                <headerField value="Content-Type"/>
                <operator value="empty"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <expression value="Bundle.type"/>
                <operator value="equals"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or contains 1 Patient and 1 Practitioner entry."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(Patient) or resource.is(Practitioner)).count() = 2).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or first returned resource contains a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.resource.where(meta.profile = 'http://fhir.nl/fhir/StructureDefinition/nl-core-patient')).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
    </test>
    <test id="02-ServeGGZ-Payer">
        <name value="02-ServeGGZ-Payer"/>
        <description value="Test XIS serve operation for known Coverage resource of XXX-Bals including the insurer in an Organization resource. The expected response code is 200(OK) and content is a searchset Bundle resource with 2 entries, returned in XML format."/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="Coverage"/>
                <description value="XIS serve operation for known Coverage resources, including the .payor reference Organization resource."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <params value="?_include=Coverage:payor:Patient&amp;_include=Coverage:payor:Organization"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${token-XXX-Bals}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client requested an Accept of the FHIR XML mime type 'application/fhir+xml'."/>
                <direction value="request"/>
                <headerField value="Accept"/>
                <operator value="contains"/>
                <value value="application/fhir+xml"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client did not request a Content-Type. Warning only to allow for systems that automatically send Content-Type."/>
                <direction value="request"/>
                <headerField value="Content-Type"/>
                <operator value="empty"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <expression value="Bundle.type"/>
                <operator value="equals"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or contains 1 Coverage and 1 Organization entries."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(Coverage) or resource.is(Organization)).count() = 2).exists()"/>
            </assert>
        </action>        
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or first returned resource contains a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.resource.where(meta.profile = 'http://nictiz.nl/fhir/StructureDefinition/zib-Payer')).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
    </test>
    <test id="03-ServeGGZ-TreatmentDirective">
        <name value="03-ServeGGZ-TreatmentDirective"/>
        <description value="Test XIS serve operation for known Consent resource with a category code for TreatmentDirective of XXX-Bals. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 entry, returned in XML format."/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="Consent"/>
                <description value="XIS serve operation for known Consent resources with a SNOMED category code for TreatmentDirective."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <params value="?category=http://snomed.info/sct|11291000146105"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${token-XXX-Bals}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client requested an Accept of the FHIR XML mime type 'application/fhir+xml'."/>
                <direction value="request"/>
                <headerField value="Accept"/>
                <operator value="contains"/>
                <value value="application/fhir+xml"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client did not request a Content-Type. Warning only to allow for systems that automatically send Content-Type."/>
                <direction value="request"/>
                <headerField value="Content-Type"/>
                <operator value="empty"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <expression value="Bundle.type"/>
                <operator value="equals"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or contains 1 Consent entries."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(Consent)).count() = 1).exists()"/>
            </assert>
        </action>        
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or first returned resource contains a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.resource.where(meta.profile = 'http://nictiz.nl/fhir/StructureDefinition/zib-TreatmentDirective')).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
    </test>
    <test id="04-ServeGGZ-AdvanceDirective">
        <name value="04-ServeGGZ-AdvanceDirective"/>
        <description value="Test XIS serve operation for known Consent resource with a category code for AdvanceDirective of XXX-Bals. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 entry, returned in XML format."/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="Consent"/>
                <description value="XIS serve operation for known Consent resources with a SNOMED category code for AdvanceDirective."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <params value="?category=http://snomed.info/sct|11341000146107"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${token-XXX-Bals}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client requested an Accept of the FHIR XML mime type 'application/fhir+xml'."/>
                <direction value="request"/>
                <headerField value="Accept"/>
                <operator value="contains"/>
                <value value="application/fhir+xml"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client did not request a Content-Type. Warning only to allow for systems that automatically send Content-Type."/>
                <direction value="request"/>
                <headerField value="Content-Type"/>
                <operator value="empty"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <expression value="Bundle.type"/>
                <operator value="equals"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or contains 1 Consent entries."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(Consent)).count() = 1).exists()"/>
            </assert>
        </action>        
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or first returned resource contains a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.resource.where(meta.profile = 'http://nictiz.nl/fhir/StructureDefinition/zib-AdvanceDirective')).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
    </test>
    <test id="05-ServeGGZ-FunctionalOrMentalStatus">
        <name value="05-ServeGGZ-FunctionalOrMentalStatus"/>
        <description value="Test XIS serve operation for Observation resource with a code for FunctionalOrMentalStatus of XXX-Bals. The expected response code is 200(OK) and content is a searchset Bundle resource with 2 entries, returned in XML format."/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="Observation"/>
                <description value="XIS serve operation for known Observation resource with a SNOMED code for FunctionalOrMentalStatus."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <params value="?category=http://snomed.info/sct|118228005,http://snomed.info/sct|384821006"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${token-XXX-Bals}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client requested an Accept of the FHIR XML mime type 'application/fhir+xml'."/>
                <direction value="request"/>
                <headerField value="Accept"/>
                <operator value="contains"/>
                <value value="application/fhir+xml"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client did not request a Content-Type. Warning only to allow for systems that automatically send Content-Type."/>
                <direction value="request"/>
                <headerField value="Content-Type"/>
                <operator value="empty"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <expression value="Bundle.type"/>
                <operator value="equals"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or contains 2 Observation entries."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(Observation)).count() = 2).exists()"/>
            </assert>
        </action>        
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or first returned resource contains a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.resource.where(meta.profile = 'http://nictiz.nl/fhir/StructureDefinition/zib-FunctionalOrMentalStatus')).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
    </test>
    <test id="06-ServeGGZ-Problem">
        <name value="06-ServeGGZ-Problem"/>
        <description value="Test XIS serve operation for all known Condition resources of XXX-Bals. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 entry, returned in XML format."/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="Condition"/>
                <description value="XIS serve operation for all known Condition resources."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${token-XXX-Bals}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client requested an Accept of the FHIR XML mime type 'application/fhir+xml'."/>
                <direction value="request"/>
                <headerField value="Accept"/>
                <operator value="contains"/>
                <value value="application/fhir+xml"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client did not request a Content-Type. Warning only to allow for systems that automatically send Content-Type."/>
                <direction value="request"/>
                <headerField value="Content-Type"/>
                <operator value="empty"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <expression value="Bundle.type"/>
                <operator value="equals"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or contains 1 Condition entries."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(Condition)).count() = 1).exists()"/>
            </assert>
        </action>        
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or first returned resource contains a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.resource.where(meta.profile = 'http://nictiz.nl/fhir/StructureDefinition/zib-Problem')).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
    </test>
    <test id="07-ServeGGZ-DrugUse">
        <name value="07-ServeGGZ-DrugUse"/>
        <description value="Test XIS serve operation for all known Observation resources with a SNOMED code for DrugUse of XXX-Bals. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 entry, returned in XML format."/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="Observation"/>
                <description value="XIS serve operation for all known Observation resources with a SNOMED code for DrugUse."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <params value="?code=http://snomed.info/sct|228366006"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${token-XXX-Bals}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client requested an Accept of the FHIR XML mime type 'application/fhir+xml'."/>
                <direction value="request"/>
                <headerField value="Accept"/>
                <operator value="contains"/>
                <value value="application/fhir+xml"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client did not request a Content-Type. Warning only to allow for systems that automatically send Content-Type."/>
                <direction value="request"/>
                <headerField value="Content-Type"/>
                <operator value="empty"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <expression value="Bundle.type"/>
                <operator value="equals"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or contains 1 Observation entries."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(Observation)).count() = 1).exists()"/>
            </assert>
        </action>        
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or first returned resource contains a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.resource.where(meta.profile = 'http://nictiz.nl/fhir/StructureDefinition/zib-DrugUse')).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
    </test>
    <test id="08-ServeGGZ-AlcoholUse">
        <name value="08-ServeGGZ-AlcoholUse"/>
        <description value="Test XIS serve operation for all known Observation resources with a SNOMED code for AlcoholUse of XXX-Bals. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 entry, returned in XML format."/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="Observation"/>
                <description value="XIS serve operation for all known Observation resources with a SNOMED code for AlcoholUse."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <params value="?code=http://snomed.info/sct|228273003"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${token-XXX-Bals}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client requested an Accept of the FHIR XML mime type 'application/fhir+xml'."/>
                <direction value="request"/>
                <headerField value="Accept"/>
                <operator value="contains"/>
                <value value="application/fhir+xml"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client did not request a Content-Type. Warning only to allow for systems that automatically send Content-Type."/>
                <direction value="request"/>
                <headerField value="Content-Type"/>
                <operator value="empty"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <expression value="Bundle.type"/>
                <operator value="equals"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or contains 1 Observation entries."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(Observation)).count() = 1).exists()"/>
            </assert>
        </action>        
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or first returned resource contains a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.resource.where(meta.profile = 'http://nictiz.nl/fhir/StructureDefinition/zib-AlcoholUse')).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
    </test>
    <test id="09-ServeGGZ-TobaccoUse">
        <name value="09-ServeGGZ-TobaccoUse"/>
        <description value="Test XIS serve operation for all known Observation resources with a SNOMED code for TobaccoUse of XXX-Bals. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 entry, returned in XML format."/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="Observation"/>
                <description value="XIS serve operation for all known Observation resources with a SNOMED code for Tobaccouse."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <params value="?code=http://snomed.info/sct|365980008"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${token-XXX-Bals}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client requested an Accept of the FHIR XML mime type 'application/fhir+xml'."/>
                <direction value="request"/>
                <headerField value="Accept"/>
                <operator value="contains"/>
                <value value="application/fhir+xml"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client did not request a Content-Type. Warning only to allow for systems that automatically send Content-Type."/>
                <direction value="request"/>
                <headerField value="Content-Type"/>
                <operator value="empty"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <expression value="Bundle.type"/>
                <operator value="equals"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or contains 1 Observation entries."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(Observation)).count() = 1).exists()"/>
            </assert>
        </action>        
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or first returned resource contains a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.resource.where(meta.profile = 'http://nictiz.nl/fhir/StructureDefinition/zib-TobaccoUse')).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
    </test>
    <test id="10-ServeGGZ-LivingSituation">
        <name value="10-ServeGGZ-LivingSituation"/>
        <description value="Test XIS serve operation for the last known Observation resrouce with a SNOMED code for LivingSituation of XXX-Bals. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 entry, returned in XML format."/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="Observation"/>
                <description value="XIS serve operation for all known Observation resources."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <params value="/$lastn?code=http://snomed.info/sct|365508006"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${token-XXX-Bals}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client requested an Accept of the FHIR XML mime type 'application/fhir+xml'."/>
                <direction value="request"/>
                <headerField value="Accept"/>
                <operator value="contains"/>
                <value value="application/fhir+xml"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client did not request a Content-Type. Warning only to allow for systems that automatically send Content-Type."/>
                <direction value="request"/>
                <headerField value="Content-Type"/>
                <operator value="empty"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <expression value="Bundle.type"/>
                <operator value="equals"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or contains 1 Observation entries."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(Observation)).count() = 1).exists()"/>
            </assert>
        </action>        
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or first returned resource contains a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.resource.where(meta.profile = 'http://nictiz.nl/fhir/StructureDefinition/zib-LivingSituation')).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
    </test>
    <test id="11-ServeGGZ-FamilySituation">
        <name value="11-ServeGGZ-FamilySituation"/>
        <description value="Test XIS serve operation for all known Observation resources with a SNOMED code for FamilySituation of XXX-Bals. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 entry, returned in XML format."/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="Observation"/>
                <description value="XIS serve operation for all known Observation resources with a SNOMED code for FamilySituation."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <params value="?code=http://snomed.info/sct|365470003"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${token-XXX-Bals}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client requested an Accept of the FHIR XML mime type 'application/fhir+xml'."/>
                <direction value="request"/>
                <headerField value="Accept"/>
                <operator value="contains"/>
                <value value="application/fhir+xml"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client did not request a Content-Type. Warning only to allow for systems that automatically send Content-Type."/>
                <direction value="request"/>
                <headerField value="Content-Type"/>
                <operator value="empty"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <expression value="Bundle.type"/>
                <operator value="equals"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or contains 1 Observation entries."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(Observation)).count() = 1).exists()"/>
            </assert>
        </action>        
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or first returned resource contains a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.resource.where(meta.profile = 'http://nictiz.nl/fhir/StructureDefinition/zib-FamilySituation')).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
    </test>
    <test id="12-ServeGGZ-FamilySituationChild">
        <name value="12-ServeGGZ-FamilySituationChild"/>
        <description value="Test XIS serve operation for all known Observation resources with a SNOMED code for FamilySituationChild of XXX-Bals. The expected response code is 200(OK) and content is a searchset Bundle resource with 0 entries, returned in XML format."/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="Observation"/>
                <description value="XIS serve operation for all known Observation resources with a SNOMED code for FamilySituationChild."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <params value="?code=http://snomed.info/sct|55801000146105"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${token-XXX-Bals}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client requested an Accept of the FHIR XML mime type 'application/fhir+xml'."/>
                <direction value="request"/>
                <headerField value="Accept"/>
                <operator value="contains"/>
                <value value="application/fhir+xml"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client did not request a Content-Type. Warning only to allow for systems that automatically send Content-Type."/>
                <direction value="request"/>
                <headerField value="Content-Type"/>
                <operator value="empty"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <expression value="Bundle.type"/>
                <operator value="equals"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or contains 0 entries."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(Observation)).count() = 0).exists()"/>
            </assert>
        </action>        
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
    </test>
    <test id="13-ServeGGZ-ParticipationInSociety">
        <name value="13-ServeGGZ-ParticipationInSociety"/>
        <description value="Test XIS serve operation for all known Observation resources with a SNOMED code for ParticipationInSociety of XXX-Bals. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 entry, returned in XML format."/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="Observation"/>
                <description value="XIS serve operation for all known Observation resources with a SNOMED code for ParticipationInSociety."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <params value="?code=http://snomed.info/sct|314845004"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${token-XXX-Bals}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client requested an Accept of the FHIR XML mime type 'application/fhir+xml'."/>
                <direction value="request"/>
                <headerField value="Accept"/>
                <operator value="contains"/>
                <value value="application/fhir+xml"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client did not request a Content-Type. Warning only to allow for systems that automatically send Content-Type."/>
                <direction value="request"/>
                <headerField value="Content-Type"/>
                <operator value="empty"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <expression value="Bundle.type"/>
                <operator value="equals"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or contains 1 Observation entries."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(Observation)).count() = 1).exists()"/>
            </assert>
        </action>        
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or first returned resource contains a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.resource.where(meta.profile = 'http://nictiz.nl/fhir/StructureDefinition/zib-ParticipationInSociety')).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
    </test>
    <test id="14-ServeGGZ-HelpFromOthers">
        <name value="14-ServeGGZ-HelpFromOthers"/>
        <description value="Test XIS serve operation for all known CarePlan resources with a category SNOMED code for HelpFromOthers of XXX-Bals. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 entry, returned in XML format."/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="CarePlan"/>
                <description value="XIS serve operation for all known Observation resources with a category SNOMED code for HelpFromOthers."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <params value="?category=http://snomed.info/sct|243114000"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${token-XXX-Bals}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client requested an Accept of the FHIR XML mime type 'application/fhir+xml'."/>
                <direction value="request"/>
                <headerField value="Accept"/>
                <operator value="contains"/>
                <value value="application/fhir+xml"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client did not request a Content-Type. Warning only to allow for systems that automatically send Content-Type."/>
                <direction value="request"/>
                <headerField value="Content-Type"/>
                <operator value="empty"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <expression value="Bundle.type"/>
                <operator value="equals"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or contains 1 Carplan entries."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(CarePlan)).count() = 1).exists()"/>
            </assert>
        </action>        
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or first returned resource contains a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.resource.where(meta.profile = 'http://nictiz.nl/fhir/StructureDefinition/zib-HelpFromOthers')).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
    </test>
    <test id="15-ServeGGZ-LaboratoryTestResult">
        <name value="15-ServeGGZ-LaboratoryTestResult"/>
        <description value="Test XIS serve operation for the last known Obervation resources with a category for LaboratoryTestResult, specific for Chemistry observations of XXX-Bals, including the referenced Specimem resource. The expected response code is 200(OK) and content is a searchset Bundle resource with at least 2 entries, returned in XML format."/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="Observation"/>
                <description value="XIS serve operation for the last kown Observation resource with a category for LaboratoryTestResult, specific for Chemistry observations, including the referenced Specimem resource."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <params value="/$lastn?category=http://snomed.info/sct|275711006&amp;_include=Observation:related-target&amp;_include=Observation:specimen"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${token-XXX-Bals}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client requested an Accept of the FHIR XML mime type 'application/fhir+xml'."/>
                <direction value="request"/>
                <headerField value="Accept"/>
                <operator value="contains"/>
                <value value="application/fhir+xml"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client did not request a Content-Type. Warning only to allow for systems that automatically send Content-Type."/>
                <direction value="request"/>
                <headerField value="Content-Type"/>
                <operator value="empty"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <expression value="Bundle.type"/>
                <operator value="equals"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or contains at least 2 Observation entries."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(Observation)).count() >= 2).exists()"/>
            </assert>
        </action>        
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or first returned resource contains a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.resource.where(meta.profile = 'http://nictiz.nl/fhir/StructureDefinition/zib-LaboratoryTestResult-Observation')).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
    </test>
    <test id="16-ServeGGZ-GeneralMeasurement">
        <name value="16-ServeGGZ-GeneralMeasurement"/>
        <description value="Test XIS serve operation for all known Observation resources with a survey category code of XXX-Bals. The expected response code is 200(OK) and content is a searchset Bundle resource with at least 1 entry, returned in XML format."/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="Observation"/>
                <description value="XIS serve operation for all known Observation resources with a survey category code."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <params value="?category=http://hl7.org/fhir/observation-category|survey"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${token-XXX-Bals}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client requested an Accept of the FHIR XML mime type 'application/fhir+xml'."/>
                <direction value="request"/>
                <headerField value="Accept"/>
                <operator value="contains"/>
                <value value="application/fhir+xml"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client did not request a Content-Type. Warning only to allow for systems that automatically send Content-Type."/>
                <direction value="request"/>
                <headerField value="Content-Type"/>
                <operator value="empty"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <expression value="Bundle.type"/>
                <operator value="equals"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or contains 1 Observation entries."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(Observation)).count() = 1).exists()"/>
            </assert>
        </action>        
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or first returned resource contains a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.resource.where(meta.profile = 'http://nictiz.nl/fhir/StructureDefinition/zib-GeneralMeasurement')).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
    </test>
    <test id="17-ServeGGZ-Procedure">
        <name value="17-ServeGGZ-Procedure"/>
        <description value="Test XIS serve operation for all known Procedure resources of XXX-Bals. The expected response code is 200(OK) and content is a searchset Bundle resource with at least 1 entry, returned in XML format."/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="Procedure"/>
                <description value="XIS serve operation for Procedure resources."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${token-XXX-Bals}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client requested an Accept of the FHIR XML mime type 'application/fhir+xml'."/>
                <direction value="request"/>
                <headerField value="Accept"/>
                <operator value="contains"/>
                <value value="application/fhir+xml"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client did not request a Content-Type. Warning only to allow for systems that automatically send Content-Type."/>
                <direction value="request"/>
                <headerField value="Content-Type"/>
                <operator value="empty"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <expression value="Bundle.type"/>
                <operator value="equals"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or at least 1 Procedure entries."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(Procedure)).count() >= 1).exists()"/>
            </assert>
        </action>        
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or first returned resource contains a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.resource.where(meta.profile = 'http://nictiz.nl/fhir/StructureDefinition/zib-Procedure')).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
    </test>
    <test id="18-ServeGGZ-TextResult">
        <name value="18-ServeGGZ-TextResult"/>
        <description value="Test XIS serve operation for all known DiagnosticReport resources of XXX-Bals. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 entry, returned in XML format."/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="DiagnosticReport"/>
                <description value="XIS serve operation for all known DiagnosticReport resources."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${token-XXX-Bals}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client requested an Accept of the FHIR XML mime type 'application/fhir+xml'."/>
                <direction value="request"/>
                <headerField value="Accept"/>
                <operator value="contains"/>
                <value value="application/fhir+xml"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client did not request a Content-Type. Warning only to allow for systems that automatically send Content-Type."/>
                <direction value="request"/>
                <headerField value="Content-Type"/>
                <operator value="empty"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <expression value="Bundle.type"/>
                <operator value="equals"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or at least 1 DiagnosticReport entries."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(DiagnosticReport)).count() >= 1).exists()"/>
            </assert>
        </action>        
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or first returned resource contains a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.resource.where(meta.profile = 'http://nictiz.nl/fhir/StructureDefinition/zib-TextResult')).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
    </test>
    <test id="19-ServeGGZ-CareTeam">
        <name value="19-ServeGGZ-CareTeam"/>
        <description value="Test XIS serve operation for all known CareTeam resources, including the CareTeam participant information, of XXX-Bals. The expected response code is 200(OK) and content is a searchset Bundle resource with 4 entries, returned in XML format."/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="CareTeam"/>
                <description value="XIS serve operation for all known CarePlan resources and include the CareTeam participants.."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <params value="?_include=CareTeam:participant"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${token-XXX-Bals}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client requested an Accept of the FHIR XML mime type 'application/fhir+xml'."/>
                <direction value="request"/>
                <headerField value="Accept"/>
                <operator value="contains"/>
                <value value="application/fhir+xml"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client did not request a Content-Type. Warning only to allow for systems that automatically send Content-Type."/>
                <direction value="request"/>
                <headerField value="Content-Type"/>
                <operator value="empty"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <expression value="Bundle.type"/>
                <operator value="equals"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle contains 4 entries."/>
                <direction value="response"/>
                <expression value="Bundle.entry.count() = 4"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or contains 1 CareTeam and 3 Practitioner entry."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(CareTeam) or resource.is(Practitioner)).count() = 4).exists()"/>
            </assert>
        </action> 
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or first returned resource contains a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.resource.where(meta.profile = 'http://fhir.nl/fhir/StructureDefinition/nl-core-careteam')).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
    </test>
</TestScript>
