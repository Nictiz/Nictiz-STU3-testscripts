<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://hl7.org/fhir/STU3/testscript.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TestScript xmlns="http://hl7.org/fhir">
    <id value="medmij-bgz-xis-1-1-serve-bgz"/>
    <url value="http://nictiz.nl/fhir/TestScript/medmij-gpdata-xis-1-1-serve-patient"/>
    <version value="stu3-1.1.6"/>
    <name value="MedMij General Practitioner Data - XIS Client - Scenario 1.1 - Serve Patient"/>
    <status value="active"/>
    <date value="2021-07-27"/>
    <publisher value="Nictiz"/>
    <contact>
        <name value="Nictiz"/>
        <telecom>
            <system value="email"/>
            <value value="kwalificatie@nictiz.nl"/>
            <use value="work"/>
        </telecom>
    </contact>
    <description value="MedMij General Practitioner Data for FHIR STU3 - Scenario 1.1: Serve Patient resource of person 1. Response is expected to be HTTP 200 Done."/>
    <copyright value="Â© Nictiz 2019"/>
    <origin>
        <index value="1"/>
        <profile>
            <system value="http://hl7.org/fhir/testscript-profile-origin-types"/>
            <code value="FHIR-Client"/>
        </profile>
    </origin>
    <destination>
        <index value="1"/>
        <profile>
            <system value="http://hl7.org/fhir/testscript-profile-destination-types"/>
            <code value="FHIR-Server"/>
        </profile>
    </destination>
    <fixture id="patient-token-fixture">
        <resource>
            <reference value="../_reference/medmij-gpdata-Patient-Token-kwalificatie1.xml"/>
        </resource>
    </fixture>
    <profile id="Bundle-profile">
        <reference value="http://hl7.org/fhir/StructureDefinition/Bundle"/>
    </profile>
    <variable>
        <name value="patient-token-id"/>
        <expression value="Patient.id"/>
        <sourceId value="patient-token-fixture"/>
    </variable>
    <variable>
        <name value="Token_XXX_Cevat"/>
        <defaultValue value="Bearer 0aed465d-aab0-4417-9b3c-e6f635892fea"/>
        <!--<defaultValue value="${patient1-token-id}"/>-->
        <description value="OAuth Token for patient XXX_Cevat"/>
    </variable>
    <variable>
        <name value="MedMij-Request-ID"/>
        <defaultValue value="${UUID}"/>
        <description value="MedMij-Request-ID, by default a UUID. Does not have to be edited, see MM-2254 for more information"/>
    </variable>
    <test id="Scenario1.1-ServePatient">
        <name value="Scenario1.1-ServePatient"/>
        <description value="Test XIS Client serve search operation for known Patient resource of person 1 including the patient's general practitioner. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 Patient resource entry and 1 Practitioner resource entry."/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="Patient"/>
                <description value="XIS Server serve search operation for known Patient, including the reference practitioner resource."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <origin value="1"/>
                <params value="?_include=Patient:general-practitioner"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${Token_XXX_Cevat}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
                <requestHeader>
                    <field value="MedMij-Request-ID"/>
                    <value value="${MedMij-Request-ID}"/>
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the client did not request a Content-Type. Warning only to allow for systems that automatically send Content-Type."/>
                <direction value="request"/>
                <headerField value="Content-Type"/>
                <operator value="empty"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that HTTP header Authorization contains the patient token ${patient-token-id}"/>
                <direction value="request"/>
                <headerField value="Authorization"/>
                <value value="${Token_XXX_Cevat}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <expression value="Bundle.type"/>
                <operator value="equals"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the .total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or contains 1 Patient and 1 Practitioner entry."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(Patient) or resource.is(Practitioner)).count() = 2).exists()"/>
            </assert>
        </action>
        <!-- meta.profile tag and validation - asserts -->
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry[0].resource.meta.profile).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Patient resources contain a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(Patient)).count() = Bundle.entry.resource.where(is(Patient) and meta.profile = 'http://fhir.nl/fhir/StructureDefinition/nl-core-patient').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Patient resources contain a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(Practitioner)).count() = Bundle.entry.resource.where(is(Practitioner) and meta.profile = 'http://fhir.nl/fhir/StructureDefinition/nl-core-practitioner').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <!-- specific content asserts -->
        <action>
            <assert>
                <description value="Confirm that Patient resources contains a name."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(Patient)).count() = Bundle.entry.resource.where(is(Patient) and name.exists()).count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Practitioner resources contains a identifier."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(Practitioner)).count() = Bundle.entry.resource.where(is(Practitioner) and identifier.exists()).count()"/>
            </assert>
        </action>
    </test>
</TestScript>
