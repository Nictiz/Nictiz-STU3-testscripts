<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://hl7.org/fhir/STU3/testscript.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TestScript xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://hl7.org/fhir http://hl7.org/fhir/STU3/fhir-all.xsd" xmlns="http://hl7.org/fhir">
    <id value="xis-1-1-serve-all-compositions"/>
    <url value="http://nictiz.nl/fhir/TestScript/medmij-gpdata-xis-1-1-serve-all-compositions"/>
    <version value="stu3-1.1.6"/>
    <name value="MedMij General Practitioner Data - XIS Client - Scenario 1.1 - Serve All Compositions"/>
    <status value="active"/>
    <date value="2021-07-27"/>
    <publisher value="Nictiz"/>
    <contact>
        <name value="Nictiz"/>
        <telecom>
            <system value="email"/>
            <value value="kwalificatie@nictiz.nl"/>
            <use value="work"/>
        </telecom>
    </contact>
    <description value="MedMij General Practitioner Data for FHIR STU3 - Scenario 1.1: Serve All Compositions - of person 1. Response is expected to be HTTP 200 Done."/>
    <copyright value="Â© Nictiz 2019"/>
    <origin>
        <index value="1"/>
        <profile>
            <system value="http://hl7.org/fhir/testscript-profile-origin-types"/>
            <code value="FHIR-Client"/>
        </profile>
    </origin>
    <destination>
        <index value="1"/>
        <profile>
            <system value="http://hl7.org/fhir/testscript-profile-destination-types"/>
            <code value="FHIR-Server"/>
        </profile>
    </destination>
    <fixture id="patient1-token-fixture">
        <resource>
            <reference value="../_reference/medmij-gpdata-Patient-Token-kwalificatie1.xml"/>
        </resource>
    </fixture>
    <profile id="Bundle-profile">
        <reference value="http://hl7.org/fhir/StructureDefinition/Bundle"/>
    </profile>
    <variable>
        <name value="patient1-token-id"/>
        <expression value="Patient.id"/>
        <sourceId value="patient1-token-fixture"/>
    </variable>
    <variable>
        <name value="Token_XXX_Cevat"/>
        <defaultValue value="Bearer 0aed465d-aab0-4417-9b3c-e6f635892fea"/>
        <!--<defaultValue value="${patient1-token-id}"/>-->
        <description value="OAuth Token for patient XXX_Cevat"/>
    </variable>
    <test id="Scenario1.1-ServeAllCompositions">
        <name value="Scenario1.1-ServeAllCompositions"/>
        <description value="Test XIS Server to serve all Compositions for known person 1. The expected response code is 200(OK) and content is a search Bundle resource containing at least 1 Composition resource entry"/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="search"/>
                </type>
                <resource value="Composition"/>
                <description value="XIS Server query search operation for known Compositions."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <origin value="1"/>
                <params value="?type=http://loinc.org|67781-5"/>
                <requestHeader>
                    <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/>
                    <!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${Token_XXX_Cevat}"/>
                    <!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
                <requestHeader>
                    <field value="MedMij-Request-ID"/>
                    <value value="${UUID}"/>
                </requestHeader>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that HTTP header Authorization contains the patient token {$patient1-token-id}"/>
                <direction value="request"/>
                <headerField value="Authorization"/>
                <value value="${Token_XXX_Cevat}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Bundle."/>
                <direction value="response"/>
                <resource value="Bundle"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle type is searchset."/>
                <direction value="response"/>
                <operator value="equals"/>
                <path value="Bundle.type"/>
                <value value="searchset"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle contains at least 1 entry."/>
                <direction value="response"/>
                <operator value="greaterThan"/>
                <path value="Bundle.total"/>
                <value value="0"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
                <direction value="response"/>
                <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
            </assert>
        </action>
        <!-- Resource count asserts -->
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
                <direction value="response"/>
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle is empty, or contains an OperationOutcome as first resource or contains 18 Composition Resource entries."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry.where(resource.is(Composition)).count() = 18).exists()"/>
            </assert>
        </action>
        <!-- meta.profile tag and validation - asserts -->
        <action>
            <assert>
                <description value="Confirm that all returned resources contain a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(meta.profile.empty()).empty()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag."/>
                <direction value="response"/>
                <expression value="Bundle.where(entry.empty() or entry[0].resource.is(OperationOutcome) or entry[0].resource.meta.profile).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that Composition resources contain a meta.profile tag matching the expected profile."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(Composition)).count() = Bundle.entry.resource.where(is(Composition) and meta.profile = 'http://nictiz.nl/fhir/StructureDefinition/gp-EncounterReport').count()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
                <direction value="response"/>
                <validateProfileId value="Bundle-profile"/>
            </assert>
        </action>
        <!-- specific content asserts -->
        <action>
            <assert>
                <description value="Confirm that Composition resources contains the a type and a title."/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.where(is(Composition)).count() = Bundle.entry.resource.where(is(Composition) and type.exists() and title.exists()).count()"/>
            </assert>
        </action>
    </test>
</TestScript>
