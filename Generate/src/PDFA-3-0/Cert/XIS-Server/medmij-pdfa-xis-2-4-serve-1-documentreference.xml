<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://hl7.org/fhir/STU3/testscript.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TestScript xmlns="http://hl7.org/fhir" xmlns:nts="http://nictiz.nl/xsl/testscript" nts:scenario="server">
    <id value="xis-2-4-serve-1-documentmanifest"/>
    <version value="stu3-2.0"/>
    <name value="PDFA - XIS Server - Scenario 2.4 - Serve 1 DocumentReference resource by resolving reference from DocumentManifest"/>
    <description value="Scenario 2.4 - Serve 1 DocumentReference resource of XXX-Schulte."/>
    <nts:patientTokenFixture href="pdfa-nl-core-patient-XXX-Schulte-token.xml"/>
    <nts:includeDateT value="yes"/>
    
    <variable>
        <name value="documentreference-url"/>
        <!-- Pick the absolute url as is or create an absolute url when a relative url is given by combining the base URL given in the Bundle self link with the relative reference.-->
        <expression value="iif(Bundle.entry.select(resource as DocumentManifest)[0].content[0].p.reference.startsWith('DocumentReference/'),
            Bundle.link.url.replaceMatches('DocumentManifest[/?].*$','') + Bundle.entry.select(resource as DocumentManifest)[0].content[0].p.reference,
            Bundle.entry.select(resource as DocumentManifest)[0].content[0].p.reference)"/>
        <sourceId value="documentmanifest-search-response"/>
    </variable>
    
    <test id="scenario2-4-serve-documentmanifest">
        <name value="Scenario 2.4 - DocumentManifest"/>
        <description value="Serve DocumentManifest resource based on similiar request as scenario 2.3"/>
        <nts:include value="operation-search-responseId-xis">
            <nts:with-parameter name="resource" value="DocumentManifest"/>
            <nts:with-parameter name="params" value="?status=current&amp;created=ge${DATE, T, D,-365}&amp;created=le${DATE, T, D,-60}"/>
            <nts:with-parameter name="responseid" value="documentmanifest-search-response"/>
        </nts:include>
        <nts:include value="assert-responseSearchBundleSuccess" scope="common"/>
        <nts:include value="assert-responseBundleContent" scope="common"/>
        <nts:include value="assert-returnCount" scope="project">
            <nts:with-parameter name="description" value="Confirm that the returned searchset Bundle contains at least 1 DocumentManifest resources."/>
            <nts:with-parameter name="expression" value="Bundle.entry.where(resource.is(DocumentManifest)).count() >= 1"/>
        </nts:include>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle contains a DocumentReference with a specific LOINC code."/>
                <direction value="response"/>
                <expression value="Bundle.entry.select(resource as DocumentManifest).where(type.coding.where(code ='18842-5')).exists()"/>
                <warningOnly value="true"/>
            </assert>
        </action>
    </test>
    
    <test id="scenario2-4-serve-documentreference">
        <name value="Scenario 2.4 - DocumentReference"/>
        <description value="Serve DocumentReference based on DocumentManifest content reference."/>
        <nts:include value="operation-read-url-xis">
            <nts:with-parameter name="resource" value="Binary"/>
            <nts:with-parameter name="url" value="${documentreference-url}"/>
        </nts:include>
        <nts:include value="assert-responseSuccess" scope="common"/>
        <nts:include value="assert-responseBundleContent" scope="common"/>
    </test>
</TestScript>


  
