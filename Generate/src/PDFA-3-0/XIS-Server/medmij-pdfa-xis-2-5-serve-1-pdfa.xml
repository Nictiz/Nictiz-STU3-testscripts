<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://hl7.org/fhir/STU3/testscript.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TestScript xmlns="http://hl7.org/fhir" xmlns:nts="http://nictiz.nl/xsl/testscript" nts:scenario="server">
    <id value="xis-2-5-serve-1-pdfa"/>
    <version value="stu3-2.0"/>
    <name value="PDFA - XIS Server - Scenario 2.5 - Serve 1 PDFA document"/>
    <description value="Scenario 2.5 - Serve 1 PDFA document of XXX-Schulte."/>
    <nts:patientTokenFixture href="pdfa-nl-core-patient-XXX-Schulte-token.xml"/>
    <profile id="Binary-profile">
        <reference value="http://hl7.org/fhir/StructureDefinition/Binary"/>
    </profile>
    <variable>
        <name value="pdfa-url"/>
        <!-- Pick the absolute url as is or create an absolute url when a relative url is given by combining the base URL given in the Bundle self link with the relative reference.-->
        <expression value="iif(Bundle.entry.select(resource as DocumentReference)[0].content[0].attachment.url.startsWith('Binary/'),
            Bundle.link.url.replaceMatches('DocumentReference[/?].*$','') + Bundle.entry.select(resource as DocumentReference)[0].content[0].attachment.url,
            Bundle.entry.select(resource as DocumentReference)[0].content[0].attachment.url)"/>
        <sourceId value="documentreference-search-response"/>
    </variable>
    
    <test id="scenario2-5-serve-DocumentReference">
        <name value="Scenario 2.5 - search DocumentReference"/>
        <description value="Serve DocumentReference resources"/>
        <nts:include value="operation-search-responseId-xis">
            <nts:with-parameter name="resource" value="DocumentReference"/>
            <nts:with-parameter name="params" value="?status=current"/>
            <nts:with-parameter name="responseid" value="documentreference-search-response"/>
        </nts:include>
        <nts:include value="assert-responseSearchBundleSuccess" scope="common"/>
        <nts:include value="assert-responseBundleContent" scope="common"/>
        <nts:include value="assert-returnCount" scope="project">
            <nts:with-parameter name="description" value="Confirm that the returned searchset Bundle contains 1 DocumentReference resource."/>
            <nts:with-parameter name="expression" value="Bundle.entry.where(resource.is(DocumentReference)).count() = 1"/>
        </nts:include>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle contains a DocumentReference with a specific LOINC code."/>
                <direction value="response"/>
                <expression value="Bundle.entry.select(resource as DocumentReference).where(type.coding.where(code ='68626-1')).exists()"/>
                <warningOnly value="true"/>
            </assert>
        </action>
    </test>
    
    <test id="scenario2-5-serve-pdfa-document">
        <name value="Scenario 2.5 - read PDFA"/>
        <description value="Serve first PDFA document in PDF/A format or Binary resource."/>
        <nts:include value="operation-read-url-xis">
            <nts:with-parameter name="resource" value="Binary"/>
            <nts:with-parameter name="url" value="${pdfa-url}"/>
        </nts:include>
        <nts:include value="assert-responseSuccess" scope="common"/>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Binary. Set to warning only because the response does not have to be a Binary."/>
                <direction value="response"/>
                <resource value="Binary"/>
                <warningOnly value="true"/>
            </assert>
        </action>
    </test>
    
    <test id="scenario2-5-serve-pdfa-document-control">
        <name value="Scenario 2.5 - read withouth authorization header"/>
        <description value="Test XIS Server to have control over the reference obtained from the DocumentReference.content.attachment.url. This test resolves the fullURL withouth an authorization header. The request should fail to confirm that the XIS has control over the context. The expected response code is not 200(OK) but should be 401, 403 or 404.  "/>
        <action>
            <operation>
                <type>
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>
                    <code value="read"/>
                </type>
                <resource value="Binary"/>
                <description value="Test XIS server read operation for a document on a known location, using the fullURL."/>
                <accept value="xml"/>
                <contentType value="none"/>
                <url value="${pdfa-url}"/>
            </operation>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned HTTP status is 200(OK)."/>
                <direction value="response"/>
                <operator value="notEquals"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Check if the returned HTTP status is 401(Unauthorized), 403(Forbidden) or 404(Not Found). Assert is set to warning only becasue other HTTP failure codes may be expected as well."/>
                <direction value="response"/>
                <operator value="in"/>
                <responseCode value="401,403,404"/>
                <warningOnly value="true"/>
            </assert>
        </action>
    </test>
</TestScript>



