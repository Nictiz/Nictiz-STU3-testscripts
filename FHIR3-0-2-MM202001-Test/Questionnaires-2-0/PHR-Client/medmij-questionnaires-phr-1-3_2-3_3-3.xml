<?xml version="1.0" encoding="UTF-8"?>
<TestScript xmlns="http://hl7.org/fhir" xmlns:nts="http://nictiz.nl/xsl/testscript">
   <id value="medmij-questionnaires-phr-1.3-2.3-3.3"/>
   <meta>
      <profile value="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript"/>
   </meta>
   <url value="http://nictiz.nl/fhir/TestScript/medmij-questionnaires-phr-1.3-2.3-3.3"/>
   <version value="stu3-2.0- patchlevel 2022-01"/>
   <name value="MedMij Questionnaires - PHR Client - Scenario 1.3, 2.3, 3.3"/>
   <status value="active"/>
   <publisher value="Nictiz"/>
   <contact>
      <name value="Nictiz"/>
      <telecom>
         <system value="email"/>
         <value value="kwalificatie@nictiz.nl"/>
         <use value="work"/>
      </telecom>
   </contact>
   <description value="MedMij Questionnaires for FHIR STU3 - PHR Client - Scenario 1.3, 2.3, 3.3 - Retrieve QuestionnaireProvisioningTask, retrieve Questionnaire, and send QuestionnaireResponse"/>
   <origin>
      <index value="1"/>
      <profile>
         <system value="http://hl7.org/fhir/testscript-profile-origin-types"/>
         <code value="FHIR-Client"/>
      </profile>
   </origin>
   <destination>
      <index value="1"/>
      <profile>
         <system value="http://hl7.org/fhir/testscript-profile-destination-types"/>
         <code value="FHIR-Server"/>
      </profile>
   </destination>
   <fixture id="patient-token-fixture">
      <resource>
         <reference value="../_reference/medmij-questionnaires-nl-core-patient-XXX_Repscher-token.xml"/>
      </resource>
   </fixture>
   <fixture id="task-requested-fixture">
      <resource>
         <reference value="../_reference/resources/resources-specific/medmij-questionnaires-vl-QuestionnaireProvisioningTask-XXX_Repscher-Intake-REQUESTED.xml"/>
      </resource>
   </fixture>
   <fixture id="task-update-fixture">
      <resource>
         <reference value="../_reference/resources/resources-specific/medmij-questionnaires-vl-QuestionnaireProvisioningTask-XXX_Repscher-Intake-ACCEPTED.xml"/>
      </resource>
   </fixture>
   <fixture id="task-minimum-fixture-xml">
      <resource>
         <reference value="../_reference/resources/resources-specific/medmij-questionnaires-vl-QuestionnaireProvisioningTask-XXX_Repscher-Intake-minimum.xml"/>
      </resource>
   </fixture>
   <fixture id="task-minimum-fixture-json">
      <resource>
         <reference value="../_reference/resources/resources-specific/medmij-questionnaires-vl-QuestionnaireProvisioningTask-XXX_Repscher-Intake-minimum.json"/>
      </resource>
   </fixture>
   <fixture id="questionnaire-fixture">
      <resource>
         <reference value="../_reference/resources/resources-questionnaires/medmij-questionnaires-vl-Questionnaire-INTAKE-NIEUWE-PATIENT.xml"/>
      </resource>
   </fixture>
   <fixture id="response-bundle-fixture">
      <resource>
         <reference value="../_reference/resources/resources-specific/medmij-questionnaires-vl-Transaction-XXX_Repscher-Intake.xml"/>
      </resource>
   </fixture>
   <profile id="Task-profile">
      <reference value="http://nictiz.nl/fhir/StructureDefinition/vl-QuestionnaireProvisioningTask"/>
   </profile>
   <profile id="Bundle-profile">
      <reference value="http://hl7.org/fhir/StructureDefinition/Bundle"/>
   </profile>
   <variable>
      <name value="patient-token-id"/>
      <expression value="Patient.id"/>
      <sourceId value="patient-token-fixture"/>
   </variable>
   <variable>
      <name value="task-id"/>
      <expression value="Task.id"/>
      <sourceId value="task-requested-fixture"/>
   </variable>
   <variable>
      <name value="questionnaire-id"/>
      <expression value="Questionnaire.id"/>
      <sourceId value="questionnaire-fixture"/>
   </variable>
   <variable>
      <name value="questionnaireresponse-id"/>
      <expression value="Bundle.entry.select(resource as QuestionnaireResponse).id"/>
      <sourceId value="transaction-response"/>
   </variable>
   <variable>
      <name value="task-fullurl"/>
      <!-- Assume there's just one entry, which is a requirement for the test -->
      <expression value="entry[0].fullUrl"/>
      <sourceId value="search-response"/>
   </variable>
   <variable>
      <name value="server-base"/>
      <expression value="link.url.replaceMatches('(.*/)Task.*', '$1')"/>
      <sourceId value="search-response"/>
   </variable>
   <variable>
      <name value="T"/>
      <defaultValue value="${CURRENTDATE}"/>
      <description value="Date that data and queries are expected to be relative to."/>
   </variable>
   <rule id="assertMinimumRequest">
      <resource>
         <reference value="../_reference/rule/assertMinimumRequest.groovy"/>
      </resource>
   </rule>
   <setup><!-- Search for open Tasks. If they are present, another test is
                 running at the moment and this test cannot proceed. -->
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/testscript-operation-codes"/>
               <code value="search"/>
            </type>
            <resource value="Task"/>
            <description value="Test PHR client to search for QuestionnaireReferenceTask resources with status 'requested'."/>
            <destination value="1"/>
            <params value="?code=http://loinc.org|74468-0&amp;status=requested"/>
            <requestHeader><!-- 0..* Each operation can have one or more header elements -->
               <field value="Authorization"/>
               <!-- 1..1 HTTP header field name: OAuth access token -->
               <value value="${patient-token-id}"/>
               <!-- 1..1 HTTP headerfield value: UUID4 -->
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <responseId value="search-response"/>
         </operation>
      </action>
      <action>
         <assert>
            <description value="If this test fails, someone else is running a test for this patient at the moment. Please try again at some later time or contact Nictiz Qualifications if this issue persists."/>
            <expression value="Bundle.total = 0"/>
         </assert>
      </action>
      <!-- Create Task resource with unique ID.
         Note: the "autocreate" option can't be used because it misses the authorization headers -->
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/testscript-operation-codes"/>
               <code value="updateCreate"/>
            </type>
            <resource value="Task"/>
            <description value="Create QuestionnaireReferenceTask for the PHR client to act on."/>
            <destination value="1"/>
            <params value="/${task-id}"/>
            <requestHeader><!-- 0..* Each operation can have one or more header elements -->
               <field value="Authorization"/>
               <!-- 1..1 HTTP header field name: OAuth access token -->
               <value value="${patient-token-id}"/>
               <!-- 1..1 HTTP headerfield value: UUID4 -->
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <sourceId value="task-requested-fixture"/>
         </operation>
      </action>
   </setup>
   <test id="Scenario1.3-SearchTask">
      <name value="Scenario1.3 - Search QuestionnaireProvisioningTask(s) for patient 2"/>
      <description value="Test PHR client to search for QuestionnaireProvisioningTasks with status 'requested'. The return value should be a Bundle with a single entry."/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/testscript-operation-codes"/>
               <code value="search"/>
            </type>
            <resource value="Task"/>
            <description value="Test PHR client to search for QuestionnaireReferenceTask resources with status 'requested'."/>
            <destination value="1"/>
            <origin value="1"/>
            <params value="?code=http://loinc.org|74468-0&amp;status=requested"/>
            <requestHeader><!-- 0..* Each operation can have one or more header elements -->
               <field value="Authorization"/>
               <!-- 1..1 HTTP header field name: OAuth access token -->
               <value value="${patient-token-id}"/>
               <!-- 1..1 HTTP headerfield value: UUID4 -->
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <responseId value="search-response"/>
         </operation>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that HTTP header Authorization contains the patient token ${patient-token-id}"/>
            <direction value="request"/>
            <headerField value="Authorization"/>
            <value value="${patient-token-id}"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that query parameter 'owner=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="owner="/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that query parameter 'subject=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="subject="/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the search returns a Bundle with one entry."/>
            <direction value="response"/>
            <expression value="Bundle.total = 1"/>
         </assert>
      </action>
   </test>
   <test id="Scenario2.3-RetrieveQuestionnaire">
      <name value="Scenario2.3 - Retrieve Questionnaire"/>
      <description value="Test PHR client to retrieve the Questionnaire resource specified in the QuestionnaireProvisioningTask.output:Questionnaire.reference. This should be a single GET on the Questionnaire resource."/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/testscript-operation-codes"/>
               <code value="read"/>
            </type>
            <resource value="Questionnaire"/>
            <description value="Test PHR client to retrieve the Questionnaire resource."/>
            <destination value="1"/>
            <origin value="1"/>
            <params value="/${questionnaire-id}"/>
            <requestHeader><!-- 0..* Each operation can have one or more header elements -->
               <field value="Authorization"/>
               <!-- 1..1 HTTP header field name: OAuth access token -->
               <value value="${patient-token-id}"/>
               <!-- 1..1 HTTP headerfield value: UUID4 -->
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that HTTP header Authorization contains the patient token ${patient-token-id}"/>
            <direction value="request"/>
            <headerField value="Authorization"/>
            <value value="${patient-token-id}"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that a Questionnaire instance is returned"/>
            <resource value="Questionnaire"/>
         </assert>
      </action>
   </test>
   <test id="Scenario3.3-part1-SendQuestionnaireResponse">
      <name value="Scenario3.3 - Part 1 - Accept QuestionnaireProvisioningTask"/>
      <description value="Test PHR client to send an update of the QuestionnaireProvisioningTask with status='accepted'. The body of the request should otherwise be the same as the original Task as received from the server."/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/testscript-operation-codes"/>
               <code value="update"/>
            </type>
            <resource value="Task"/>
            <description value="Test PHR client to update the status of the QuestionnaireProvisioningTask."/>
            <destination value="1"/>
            <origin value="1"/>
            <params value="/${task-id}"/>
            <requestHeader><!-- 0..* Each operation can have one or more header elements -->
               <field value="Authorization"/>
               <!-- 1..1 HTTP header field name: OAuth access token -->
               <value value="${patient-token-id}"/>
               <!-- 1..1 HTTP headerfield value: UUID4 -->
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <sourceId value="task-update-fixture"/>
         </operation>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that HTTP header Authorization contains the patient token ${patient-token-id}"/>
            <direction value="request"/>
            <headerField value="Authorization"/>
            <value value="${patient-token-id}"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the request body is a Task"/>
            <direction value="request"/>
            <resource value="Task"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the Task instance declares its profile"/>
            <direction value="request"/>
            <expression value="meta.profile = 'http://nictiz.nl/fhir/StructureDefinition/vl-QuestionnaireProvisioningTask'"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="true"/>
            </extension>
            <description value="Confirm that the operation was succesful"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the Task conforms to the required profile"/>
            <direction value="request"/>
            <validateProfileId value="Task-profile"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <!-- There seems to be a bug in Touchstone that requires this directive to be present, although it 
                 shouldn't be necessary from the Groovy perspective. -->
            <direction value="request"/>
            <rule>
               <ruleId value="assertMinimumRequest"/>
               <param>
                  <name value="minimumFixtureBase"/>
                  <value value="task-minimum-fixture"/>
               </param>
            </rule>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the status of the Task is 'accepted'"/>
            <direction value="request"/>
            <expression value="Task.status = 'accepted'"/>
         </assert>
      </action>
   </test>
   <test id="Scenario3.3-part2-SendQuestionnaireResponse">
      <name value="Scenario3.3 - Part 2 - Send QuestionnaireResponse"/>
      <description value="Test PHR client to complete the QuestionnaireProvisioningTask with a QuestionnaireResponse instance. This should be a transaction where Task status is set to 'completed', the QuestionnaireResponse is created and the QuestionnaireResponse is linked in Task.output."/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/testscript-operation-codes"/>
               <code value="transaction"/>
            </type>
            <description value="Test PHR client to send a transaction Bundle at the XIS base."/>
            <destination value="1"/>
            <origin value="1"/>
            <requestHeader><!-- 0..* Each operation can have one or more header elements -->
               <field value="Authorization"/>
               <!-- 1..1 HTTP header field name: OAuth access token -->
               <value value="${patient-token-id}"/>
               <!-- 1..1 HTTP headerfield value: UUID4 -->
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <responseId value="transaction-response"/>
            <sourceId value="response-bundle-fixture"/>
         </operation>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that HTTP header Authorization contains the patient token ${patient-token-id}"/>
            <direction value="request"/>
            <headerField value="Authorization"/>
            <value value="${patient-token-id}"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the client posted a Bundle"/>
            <direction value="request"/>
            <resource value="Bundle"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the Bundle is of type 'transaction'"/>
            <direction value="request"/>
            <expression value="Bundle.type = 'transaction'"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
            <direction value="request"/>
            <validateProfileId value="Bundle-profile"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
            <direction value="request"/>
            <expression value="Bundle.descendants().select(identifier.where(system.toString() = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty())).count() = 0"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all posted resources execpt Binary contain a meta.profile tag."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Binary).not()).where(meta.profile.empty()).empty()"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all resources that are updated contain a Resource.id and a fullUrl."/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(request.method='PUT').all( $this.fullUrl.exists() and $this.resource.id.exists())"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all resources that are created don't contain a Resource.id. Warning only because it not forbidden, however, the resource does not need to have an id element. If an id is provided, the server SHALL ignore it."/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(request.method='POST').all($this.resource.id.exists().not())"/>
            <warningOnly value="true"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all resources that are created don't have a RESTful fullUrl."/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(request.method='POST').all( $this.fullUrl.startsWith('http://').not() and $this.fullUrl.startsWith('https://').not() )"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all resources that are created contain no fullUrl or a UUID or OID based fullUrl."/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(request.method='POST').fullUrl.all( exists().not or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the fullUrl does not disagree with the id in the resource, see http://hl7.org/fhir/stu3/bundle-definitions.html#Bundle.entry.fullUrl"/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(fullUrl.exists() and resource.id.exists()).all($this.fullUrl.endsWith($this.resource.id))"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the fullUrl is an absolute URL, an uuid or an oid."/>
            <direction value="request"/>
            <expression value="Bundle.entry.fullUrl.all( startsWith('http://') or startsWith('https://') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that literal References (Reference.reference) are an absolute URL, a relative URL or an internal fragment reference (contained), see: http://hl7.org/fhir/stu3/references.html#literal."/>
            <direction value="request"/>
            <expression value="Bundle.descendants().reference.all( startsWith('http://') or startsWith('https://') or startsWith('#') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') or (startsWith('urn:').not() and startsWith('#').not() and matches('^[A-Za-z]{3,}/[^/]+$')) )"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/MedMij:V2019.01_FHIR_IG#Use_of_the_reference_datatype."/>
            <direction value="request"/>
            <expression value="Bundle.descendants().where($this.is(Reference)).all(display.exists())"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all CodeableConcept elements contain either a coding.display or a text value if no Coding exists or has an extension (e.g. a nullFlavor or data-absent-reason extension). For more information see https://informatiestandaarden.nictiz.nl/wiki/MedMij:V2020.01/FHIR_IG#Use_of_coded_concepts."/>
            <direction value="request"/>
            <expression value="Bundle.descendants().where($this.is(CodeableConcept)) .all((coding.display.exists() or (coding.exists().not() and text.exists())) or extension.exists())"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the Bundle contains a Task and a QuestionnaireResponse"/>
            <direction value="request"/>
            <expression value="entry.where(resource as Task).exists() and entry.where(resource as QuestionnaireResponse).exists()"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the Task instance declares its profile"/>
            <direction value="request"/>
            <expression value="entry.where(resource as Task).resource.meta.profile = 'http://nictiz.nl/fhir/StructureDefinition/vl-QuestionnaireProvisioningTask'"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the Task operation is 'update'"/>
            <direction value="request"/>
            <expression value="entry.where(resource as Task).request.method = 'PUT' and entry.where(resource as Task).resource.id = '${task-id}'"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the status of the Task is 'completed'"/>
            <direction value="request"/>
            <expression value="entry.where(resource as Task).resource.status = 'completed'"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the QuestionnaireResponse operation is 'create'"/>
            <direction value="request"/>
            <expression value="entry.where(resource as QuestionnaireResponse).request.method = 'POST'"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the QuestionnaireResponse instance declares its profile"/>
            <direction value="request"/>
            <expression value="entry.where(resource as QuestionnaireResponse).resource.meta.profile = 'http://nictiz.nl/fhir/StructureDefinition/vl-QuestionnaireResponse'"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the QuestionnaireResponse contains references to the Questionnaire and the Subject"/>
            <direction value="request"/>
            <expression value="entry.where(resource as QuestionnaireResponse).resource.questionnaire.exists() and entry.where(resource as QuestionnaireResponse).resource.subject.exists()"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the QuestionnaireResponse contains the 'authored' element"/>
            <direction value="request"/>
            <expression value="entry.where(resource as QuestionnaireResponse).resource.authored.exists()"/>
         </assert>
      </action>
      <!-- TODO: This doesn't seem to work -->
      <!--        <action>
                <assert>
                    <description value="Confirm that the Task contains all the same information as the original task"/>
                    <direction value="request"/>
                    <minimumId value="task-requested-fixture"/>
                </assert>
            </action>
    -->
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the QuestionnaireResponse is referenced from the Task"/>
            <direction value="request"/>
            <expression value="entry.where(resource as Task).resource.output.where(type.text = 'QuestionnaireResponse').value.reference = entry.where(resource as QuestionnaireResponse).fullUrl"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="true"/>
            </extension>
            <description value="Confirm that the transaction was succesful"/>
            <operator value="in"/>
            <responseCode value="200"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that QuestionnaireProvisioningTask is succesfully updated"/>
            <direction value="response"/>
            <expression value="entry.response.where(location.contains('Task')).status.startsWith('200')"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that QuestionnaireResponse is created"/>
            <direction value="response"/>
            <expression value="entry.response.where(location.contains('QuestionnaireResponse')).status.startsWith('201')"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the values of the top level linkId items match the Questionnaire 'Algemene intake'"/>
            <direction value="request"/>
            <expression value="entry.where(resource as QuestionnaireResponse).resource.item.where(linkId = 'algemeen').exists() and entry.where(resource as QuestionnaireResponse).resource.item.where(linkId = 'voorgeschiedenis').exists() and entry.where(resource as QuestionnaireResponse).resource.item.where(linkId = 'socialemedia').exists() and entry.where(resource as QuestionnaireResponse).resource.item.where(linkId = 'contactgegevens').exists() and entry.where(resource as QuestionnaireResponse).resource.item.where(linkId = 'belafspraak').exists()"/>
         </assert>
      </action>
   </test>
   <teardown>
      <action>
         <operation><!-- Delete the (now modified) Task resource.
                         Note: the "autodelete" option can't be used because it misses the authorization headers -->
            <type>
               <system value="http://hl7.org/fhir/testscript-operation-codes"/>
               <code value="delete"/>
            </type>
            <resource value="Task"/>
            <description value="Delete the Task resource that was created for this test"/>
            <destination value="1"/>
            <params value="/${task-id}"/>
            <requestHeader><!-- 0..* Each operation can have one or more header elements -->
               <field value="Authorization"/>
               <!-- 1..1 HTTP header field name: OAuth access token -->
               <value value="${patient-token-id}"/>
               <!-- 1..1 HTTP headerfield value: UUID4 -->
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <operation><!-- Delete the created QuestionnaireResponse. -->
            <type>
               <system value="http://hl7.org/fhir/testscript-operation-codes"/>
               <code value="delete"/>
            </type>
            <resource value="QuestionnaireResponse"/>
            <description value="Delete the QuestionnaireResponse resource that was created during this test"/>
            <destination value="1"/>
            <params value="/${questionnaireresponse-id}"/>
            <requestHeader><!-- 0..* Each operation can have one or more header elements -->
               <field value="Authorization"/>
               <!-- 1..1 HTTP header field name: OAuth access token -->
               <value value="${patient-token-id}"/>
               <!-- 1..1 HTTP headerfield value: UUID4 -->
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
         </operation>
      </action>
   </teardown>
</TestScript>
